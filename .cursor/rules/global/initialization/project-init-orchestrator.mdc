---
description: Master orchestrator for initializing new projects
alwaysApply: false
---

# Project Initialization Orchestrator

This rule orchestrates the entire project initialization process by coordinating all initialization-related rules in the correct order.

## Current Initialization Steps

1. Technology Stack Selection
   - Ask user to specify their project's technology stack
   - This will influence subsequent setup steps like .gitignore templates

2. Git Repository Setup
   - Follow [setup-git-repo.mdc](setup-git-repo.mdc) instructions
   - Use appropriate .gitignore template based on selected stack
   - Complete all verification steps before proceeding

3. Logger Setup (if the project is nodeJS)
   - Follow [setup-winston-logger.mdc](setup-winston-logger.mdc) instructions
   - Verify logger functionality before proceeding

4. Jest Testing Setup (if the project is nodeJS)
   - Install Jest and related dependencies
   - Create initial test configuration
   - Set up test scripts in package.json
   - Create example test to verify setup
   - Ensure test runner works before proceeding

5. Linear Integration Setup
   - Follow [linear/linear-config-setup.mdc](../linear/linear-config-setup.mdc) instructions
   - Create and verify Linear configuration
   - Ensure API connectivity before proceeding

6. Project Documentation
   - Start a new chat with the instruction to create project documentation
   - Follow [create-project-document.mdc](create-project-document.mdc) instructions
   - Ensure all required sections are completed
   - Verify documentation is properly stored in /documentation/project-document.md

## Future Extensions

This orchestrator is designed to be extended with additional initialization steps. When new initialization rules are added:

1. They should be listed in this file in the correct order
2. Dependencies between steps should be clearly documented
3. Each step should include verification requirements

## Implementation Process

1. Pre-initialization Checks
   - Verify clean working directory
   - Check for existing configuration
   - Confirm all required tools are installed

2. Sequential Execution
   - Execute each initialization step in order
   - Verify completion before proceeding to next step
   - Handle any errors before continuing

3. Post-initialization Verification
   - Confirm all components are properly initialized
   - Verify integrations between components
   - Document any manual steps required

## Error Recovery

If any initialization step fails:

1. Log the error and current state
2. Provide cleanup instructions if needed
3. Document manual recovery steps
4. Offer rollback options where possible

## Future Rule Integration

When adding new initialization rules:

1. Add them to this orchestrator in appropriate order
2. Document any dependencies on other initialization steps
3. Include verification requirements
4. Update error recovery procedures as needed 